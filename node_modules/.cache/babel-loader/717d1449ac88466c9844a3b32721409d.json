{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\matco\\\\react-apps\\\\todo\\\\src\\\\components\\\\app\\\\app.js\";\nimport React, { Component } from 'react';\nimport AppHeader from \"../app-header\";\nimport TodoList from \"../todo-list\";\nimport SearchPanel from \"../search-panel\";\nimport Footer from \"../footer\";\nimport ItemStatusFilter from \"../item-status-filter\";\nimport AddItem from \"../item-add-form/item-add-form\";\nimport './app.css';\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.maxId = 100;\n    this.state = {\n      todoData: [this.createTodoItem('кровать'), this.createTodoItem('трубы в ванную и кухню'), this.createTodoItem('туалет'), this.createTodoItem('кран с душем в ванную')],\n      term: '',\n      filter: 'all' //все, сделанные, активные\n\n    };\n\n    this.onfilterButton = filter => {\n      this.setState({\n        filter\n      });\n    };\n  }\n\n  //генерит айдишки сервер, поэтому мы просто взяли 100\n  createTodoItem(label) {\n    return {\n      label,\n      important: false,\n      done: false,\n      id: this.maxId++\n    };\n  }\n\n  filter(items, filter) {\n    switch (filter) {\n      //заменяет несколько if\n      case 'all':\n        return items;\n\n      case 'active':\n        return items.filter(item => !item.done);\n\n      case 'done':\n        return items.filter(item => item.done);\n\n      default:\n        return items;\n    }\n  }\n\n  render() {\n    const {\n      todoData,\n      term,\n      filter\n    } = this.state;\n    const visibleItems = this.filter(this.search(todoData, term), filter);\n    const doneCount = todoData.filter(el => el.done).length;\n    const todoCount = todoData.length - doneCount;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"todo-app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(AppHeader, {\n      toDo: todoCount,\n      done: doneCount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"top-panel d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SearchPanel, {\n      OnFilter: this.onSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(ItemStatusFilter, {\n      FilterButton: filter,\n      ButtonChange: this.onfilterButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(TodoList, {\n      todos: visibleItems,\n      onDel: this.deleteListItem //когда мы кликаем на кнопку(событие кнопки) в List-Item, мы вызываем функцию которую нам передал Todo-List, Todo-List в свою очередь вызывает функцию. которую передал App, таким образом App узнает о том, что один из List-Item решил удалиться (его id). Теперь нам нужно состояние App, чтобы он состояние компонента именилась и React заново вызывает функцию render, функция рендер возвраает новую структуру для нашего компонента, Реакт запускает реконсилейшен алгоритм и находит что изменился только класс, и обновляет егов DOM дереве\n      ,\n      onToggleImportant: this.onImportant,\n      onToggleDone: this.onDone,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(AddItem, {\n      onAdd: this.addItemList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/matco/react-apps/todo/src/components/app/app.js"],"names":["React","Component","AppHeader","TodoList","SearchPanel","Footer","ItemStatusFilter","AddItem","App","maxId","state","todoData","createTodoItem","term","filter","onfilterButton","setState","label","important","done","id","items","item","render","visibleItems","search","doneCount","el","length","todoCount","onSearch","deleteListItem","onImportant","onDone","addItemList"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport AppHeader from \"../app-header\";\r\nimport TodoList from \"../todo-list\";\r\nimport SearchPanel from \"../search-panel\";\r\nimport Footer from \"../footer\";\r\nimport ItemStatusFilter from \"../item-status-filter\";\r\nimport AddItem from \"../item-add-form/item-add-form\";\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n\r\n    maxId = 100;  //генерит айдишки сервер, поэтому мы просто взяли 100\r\n\r\n    createTodoItem(label) {\r\n        return {\r\n            label,\r\n            important: false,\r\n            done: false,\r\n            id: this.maxId++\r\n        }\r\n    }\r\n\r\n    state={\r\n        todoData : [\r\n            this.createTodoItem('кровать'),\r\n            this.createTodoItem('трубы в ванную и кухню'),\r\n            this.createTodoItem('туалет'),\r\n            this.createTodoItem('кран с душем в ванную'),\r\n        ],\r\n        term: '',\r\n        filter:'all' //все, сделанные, активные\r\n    }\r\n  filter(items, filter) {\r\n        switch (filter) {       //заменяет несколько if\r\n            case 'all':\r\n                return items;\r\n            case 'active':\r\n                return items.filter((item) => !item.done)\r\n            case 'done':\r\n                return items.filter((item) => item.done)\r\n            default:\r\n                return items;\r\n        }\r\n\r\n    }\r\n    onfilterButton = (filter) => {\r\n        this.setState({ filter })\r\n    }\r\n\r\n    render () {\r\n        const {todoData, term, filter} = this.state\r\n        const visibleItems = this.filter(this.search(todoData, term), filter)\r\n\r\n        const doneCount = todoData.filter((el) => el.done).length\r\n        const todoCount = todoData.length - doneCount\r\n        return (\r\n            <div className=\"todo-app\">\r\n            <AppHeader toDo={todoCount} done={doneCount}/>\r\n            <div className=\"top-panel d-flex\">\r\n                <SearchPanel OnFilter={this.onSearch}/>\r\n                <ItemStatusFilter\r\n                    FilterButton={filter}\r\n                    ButtonChange={this.onfilterButton}\r\n                />\r\n            </div>\r\n            <TodoList\r\n                todos={visibleItems}\r\n                onDel={this.deleteListItem}\r\n                //когда мы кликаем на кнопку(событие кнопки) в List-Item, мы вызываем функцию которую нам передал Todo-List, Todo-List в свою очередь вызывает функцию. которую передал App, таким образом App узнает о том, что один из List-Item решил удалиться (его id). Теперь нам нужно состояние App, чтобы он состояние компонента именилась и React заново вызывает функцию render, функция рендер возвраает новую структуру для нашего компонента, Реакт запускает реконсилейшен алгоритм и находит что изменился только класс, и обновляет егов DOM дереве\r\n                onToggleImportant={this.onImportant}\r\n                onToggleDone={this.onDone}\r\n            />\r\n            <AddItem onAdd={this.addItemList}/>\r\n            <Footer/>\r\n        </div>\r\n        )\r\n\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}