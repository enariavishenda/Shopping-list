{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\matco\\\\react-apps\\\\todo\\\\src\\\\components\\\\list-item\\\\list-item.js\";\nimport React, { Component } from \"react\";\nimport \"./list-item.css\"; //Компоненты-Классы с внутренним состоянием.\n\nexport default class ListItem extends Component {\n  constructor() {\n    super();\n    /*создадим функцую не на прототипе, а на самом объекте и объявим как функцию стрелку чтобы this сохранялся правильно*/\n\n    this.onLabelClick = () => {\n      console.log(`Done: ${this.props.label}`);\n    };\n  } //поля класса в пропосиле 3 есть class fields равносильно тому что мы сделали в конструкторе\n  //функция на прототипе работает только с bind\n  // onLabelClick() {\n  //     console.log(`Done: ${this.props.label}`)\n  // }\n\n\n  render() {\n    const {\n      label,\n      important = false\n    } = this.props;\n    const lispanStyle = {\n      color: important ? '#d43939' : 'black',\n      fontWeight: important ? 'bols' : 'normal'\n    };\n    return /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"todo-list-item-label\",\n      style: lispanStyle,\n      onClick: this.onLabelClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, label), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-outline-success btn-sm float-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-exclamation-circle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-outline-danger btn-sm float-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-trash-o\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    })));\n  }\n\n} //у Функций нет внутреннего состояния, нам некуда сохранить свойства компонента которые могут изменяться во время работы программы, к примеру счестчик.\n\n/*\r\nconst ListItem = ( { label, important = false} ) => {\r\n\r\n    const lispanStyle = {\r\n        color: important ? '#bf3f3f' : 'black',\r\n        fontWeightw: important ? 'bols' : 'normal',\r\n    }\r\n    return <span>\r\n\r\n        <span\r\n            className=\"todo-list-item-label\"\r\n            style={lispanStyle}>\r\n            {label}\r\n        </span>\r\n\r\n        <button type=\"button\"\r\n                className=\"btn btn-outline-success btn-sm float-right\">\r\n            <i className=\"fa fa-exclamation-circle\" />\r\n        </button>\r\n        <button type=\"button\"\r\n                className=\"btn btn-outline-danger btn-sm float-right\">\r\n            <i className=\"fa fa-trash-o\" />\r\n        </button>\r\n\r\n\r\n    </span>\r\n}\r\n\r\nexport default ListItem\r\n*/","map":{"version":3,"sources":["C:/Users/matco/react-apps/todo/src/components/list-item/list-item.js"],"names":["React","Component","ListItem","constructor","onLabelClick","console","log","props","label","render","important","lispanStyle","color","fontWeight"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,iBAAP,C,CAEA;;AAEA,eAAe,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAE5CE,EAAAA,WAAW,GAAG;AACV;AACA;;AACA,SAAKC,YAAL,GAAoB,MAAM;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAa,SAAQ,KAAKC,KAAL,CAAWC,KAAM,EAAtC;AACH,KAFD;AAGH,GAR2C,CAU5C;AAIA;AACA;AACA;AACA;;;AAEAC,EAAAA,MAAM,GAAG;AAEL,UAAM;AAAED,MAAAA,KAAF;AAASE,MAAAA,SAAS,GAAG;AAArB,QAA8B,KAAKH,KAAzC;AAEA,UAAMI,WAAW,GAAG;AAChBC,MAAAA,KAAK,EAAEF,SAAS,GAAG,SAAH,GAAe,OADf;AAEhBG,MAAAA,UAAU,EAAEH,SAAS,GAAG,MAAH,GAAY;AAFjB,KAApB;AAIA,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEP;AACI,MAAA,SAAS,EAAC,sBADd;AAEI,MAAA,KAAK,EAAEC,WAFX;AAGI,MAAA,OAAO,EAAG,KAAKP,YAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMKI,KANL,CAFO,eAWP;AAAQ,MAAA,IAAI,EAAC,QAAb;AACQ,MAAA,SAAS,EAAC,4CADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAG,MAAA,SAAS,EAAC,0BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAXO,eAeP;AAAQ,MAAA,IAAI,EAAC,QAAb;AACQ,MAAA,SAAS,EAAC,2CADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAG,MAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAfO,CAAP;AAsBH;;AAjD2C,C,CAoDhD;;AACA","sourcesContent":["import React, {Component} from \"react\";\r\nimport \"./list-item.css\";\r\n\r\n//Компоненты-Классы с внутренним состоянием.\r\n\r\nexport default class ListItem extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        /*создадим функцую не на прототипе, а на самом объекте и объявим как функцию стрелку чтобы this сохранялся правильно*/\r\n        this.onLabelClick = () => {\r\n            console.log(`Done: ${this.props.label}`)\r\n        }\r\n    }\r\n\r\n    //поля класса в пропосиле 3 есть class fields равносильно тому что мы сделали в конструкторе\r\n\r\n\r\n\r\n    //функция на прототипе работает только с bind\r\n    // onLabelClick() {\r\n    //     console.log(`Done: ${this.props.label}`)\r\n    // }\r\n\r\n    render() {\r\n\r\n        const { label, important = false} = this.props\r\n\r\n        const lispanStyle = {\r\n            color: important ? '#d43939' : 'black',\r\n            fontWeight: important ? 'bols' : 'normal',\r\n        }\r\n        return <span>\r\n\r\n        <span\r\n            className=\"todo-list-item-label\"\r\n            style={lispanStyle}\r\n            onClick={ this.onLabelClick }>\r\n            {/*onClick={ this.onLabelClick.bind(this) }> не красиво так привязывать намертво к this - создается новая функция которую оборачивает bind*/}\r\n            {/*мы передаем функцию а не вызываем, без (), иначе выведет undefande*/}\r\n            {label}\r\n        </span>\r\n\r\n        <button type=\"button\"\r\n                className=\"btn btn-outline-success btn-sm float-right\">\r\n            <i className=\"fa fa-exclamation-circle\"/>\r\n        </button>\r\n        <button type=\"button\"\r\n                className=\"btn btn-outline-danger btn-sm float-right\">\r\n            <i className=\"fa fa-trash-o\"/>\r\n        </button>\r\n\r\n\r\n    </span>\r\n    }\r\n}\r\n\r\n//у Функций нет внутреннего состояния, нам некуда сохранить свойства компонента которые могут изменяться во время работы программы, к примеру счестчик.\r\n/*\r\nconst ListItem = ( { label, important = false} ) => {\r\n\r\n    const lispanStyle = {\r\n        color: important ? '#bf3f3f' : 'black',\r\n        fontWeightw: important ? 'bols' : 'normal',\r\n    }\r\n    return <span>\r\n\r\n        <span\r\n            className=\"todo-list-item-label\"\r\n            style={lispanStyle}>\r\n            {label}\r\n        </span>\r\n\r\n        <button type=\"button\"\r\n                className=\"btn btn-outline-success btn-sm float-right\">\r\n            <i className=\"fa fa-exclamation-circle\" />\r\n        </button>\r\n        <button type=\"button\"\r\n                className=\"btn btn-outline-danger btn-sm float-right\">\r\n            <i className=\"fa fa-trash-o\" />\r\n        </button>\r\n\r\n\r\n    </span>\r\n}\r\n\r\nexport default ListItem\r\n*/"]},"metadata":{},"sourceType":"module"}